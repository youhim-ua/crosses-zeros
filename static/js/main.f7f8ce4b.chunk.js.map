{"version":3,"sources":["components/Container/Container.jsx","images/cross.svg","images/circle.svg","components/Cell/Cell.jsx","helpers/underliningWinComb.js","components/Board/Board.jsx","components/ScoreTable/ScoreTable.jsx","components/Modal/Modal.jsx","helpers/findWinner.js","App.js","index.js"],"names":["Container","children","className","Cell","step","changeStep","id","cleanBoard","useState","symbol","setSymbol","useEffect","onClick","cross","zero","type","disabled","src","alt","underliningWinComb","array","result","join","Board","savePlayerSteps","winCombination","draws","setStep","setCleanBoard","alert","prevState","map","ScoreTable","player1","player2","name","wins","Modal","onSubmit","username","setUsername","e","htmlFor","autoComplete","value","onChange","target","usernameHandler","checkWinner","playerSteps","length","i","winIndexes","j","includes","push","filter","item","App","currentSteps","setPlayer1","setPlayer2","showModal","setShowModal","setWinCombination","setDraws","isPlayer1Winner","isPlayer2Winner","whoMadeStep","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7f8ce4b.chunk.js","sourcesContent":["import './styles.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return (\r\n    <div className='wrapper'>{ children }</div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","export default __webpack_public_path__ + \"static/media/cross.29b28d3a.svg\";","export default __webpack_public_path__ + \"static/media/circle.f9590110.svg\";","import { useState, useEffect } from 'react';\r\nimport cross from '../../images/cross.svg';\r\nimport zero from '../../images/circle.svg';\r\nimport './styles.css';\r\n\r\nconst Cell = ({ step, changeStep, id, cleanBoard }) => {\r\n  const [symbol, setSymbol] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    setSymbol(null);\r\n  }, [cleanBoard]);\r\n  \r\n  const showSymbolHandler = () => {\r\n    if (step) {\r\n      setSymbol(cross)\r\n    } else {\r\n      setSymbol(zero)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        changeStep(id);\r\n        showSymbolHandler();\r\n      }}\r\n      className='cell'\r\n      type='button'\r\n      disabled={symbol}\r\n    >\r\n      {symbol && <img src={symbol} alt=\"symbol\" />}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Cell;\r\n","const underliningWinComb = (array) => {\r\n  let result;\r\n\r\n  switch (array.join('')) {\r\n    case '123':\r\n      result = <div className='line1'></div>;\r\n      break;\r\n    \r\n    case '456':\r\n      result = <div className='line2'></div>;\r\n      break;\r\n\r\n    case '789':\r\n      result = <div className='line3'></div>;\r\n      break;\r\n    \r\n    case '147':\r\n      result = <div className='line4'></div>;\r\n      break;\r\n    \r\n    case '258':\r\n      result = <div className='line5'></div>;\r\n      break;\r\n    \r\n    case '369':\r\n      result = <div className='line6'></div>;\r\n      break;\r\n    \r\n    case '357':\r\n      result = <div className='line7'></div>;\r\n      break;\r\n\r\n    case '159':\r\n      result = <div className='line8'></div>;\r\n      break;\r\n  \r\n    default:\r\n      break;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport default underliningWinComb;","import { useState, useEffect } from 'react';\r\nimport Cell from '../Cell';\r\nimport underliningWinComb from '../../helpers/underliningWinComb';\r\nimport './styles.css';\r\n\r\n\r\nconst Board = ({ savePlayerSteps, winCombination, draws }) => {\r\n  const [step, setStep] = useState(true);\r\n\r\n  const [cleanBoard, setCleanBoard] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setStep(true);\r\n    setCleanBoard(false);\r\n    \r\n    if (winCombination) {\r\n      alert('Round! Great win!');\r\n      setCleanBoard(true);\r\n    }\r\n    \r\n    if (draws) {\r\n      alert('Draws! Try once more.');\r\n      setCleanBoard(true);\r\n    }\r\n  }, [winCombination, draws])\r\n\r\n  const changeStep = (id) => {\r\n    setStep((prevState) => !prevState);\r\n    savePlayerSteps(id, step);\r\n  }\r\n\r\n  const cellsIds = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  return (\r\n    <div className='board'>\r\n      <div className='horizontal-line1'></div>\r\n      <div className='horizontal-line2'></div>\r\n      <div className='vertical-line1'></div>\r\n      <div className='vertical-line2'></div>\r\n\r\n      {winCombination && underliningWinComb(winCombination)}\r\n\r\n      {cellsIds.map(id => (\r\n        <Cell\r\n          changeStep={ changeStep }\r\n          step={step}\r\n          cleanBoard={ cleanBoard }\r\n          id={id}\r\n          key={id}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;","import './styles.css';\r\n\r\nconst ScoreTable = ({ player1, player2 }) => {\r\n  return (\r\n    <>\r\n      {player1.name && <div className='score-table'>\r\n        <h2>Score</h2>\r\n        <p>{player1.name} (x): {player1.wins}</p>\r\n        {player2.name && <p>{player2.name} (o): {player2.wins}</p>}\r\n      </div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ScoreTable;\r\n","import { useState } from 'react';\r\nimport './styles.css';\r\n\r\nconst Modal = ({ onSubmit }) => {\r\n  const [username, setUsername] = useState('');\r\n\r\n  const usernameHandler = (e) => {\r\n    setUsername(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className='overlay'>\r\n      <form\r\n        id='player-name'\r\n        onSubmit={\r\n          (e) => {\r\n            onSubmit(e);\r\n            setUsername('');\r\n          }\r\n        }\r\n      >\r\n        <label htmlFor='name'>Enter your name</label>\r\n        <input\r\n          type='text'\r\n          id='name'\r\n          autoComplete='off'\r\n          value={username}\r\n          onChange={(e) => usernameHandler(e)}\r\n        />\r\n        <button type=\"submit\">Confirm</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","const winCombination = [\r\n  [1, 2, 3],\r\n  [4, 5, 6],\r\n  [7, 8, 9],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  [3, 6, 9],\r\n  [1, 5, 9],\r\n  [3, 5, 7],\r\n];\r\n\r\nconst checkWinner = (playerSteps) => {\r\n  if (playerSteps.length > 2) {\r\n    for (let i = 0; i < winCombination.length; i++) {\r\n      const result = [];\r\n      let winIndexes = null;\r\n      for (let j = 0; j < playerSteps.length; j++) {\r\n        const checkNumber = winCombination[i].includes(+playerSteps[j]);\r\n        if (checkNumber) {\r\n          result.push(true);\r\n          winIndexes = winCombination[i];\r\n        } else {\r\n          result.push(false);\r\n        };\r\n      }\r\n      \r\n      const isWin = result.filter(item => item === true).length === 3;\r\n      \r\n      if (isWin) return winIndexes;\r\n    }\r\n  }\r\n}\r\n\r\nexport default checkWinner;\r\n","import { useState, useEffect } from 'react';\nimport Container from './components/Container';\nimport Board from './components/Board';\nimport ScoreTable from './components/ScoreTable';\nimport Modal from './components/Modal';\nimport checkWinner from './helpers/findWinner';\nimport './App.css';\n\nconst App = () => {\n  const [player1, setPlayer1] = useState({\n    name: null,\n    wins: 0,\n    currentSteps: []\n  });\n\n  const [player2, setPlayer2] = useState({\n    name: null,\n    wins: 0,\n    currentSteps: []\n  });\n\n  const [showModal, setShowModal] = useState(true);\n\n  const [winCombination, setWinCombination] = useState(null);\n  \n  const [draws, setDraws] = useState(false);\n\n  useEffect(() => {\n    const isPlayer1Winner = checkWinner(player1.currentSteps);\n    const isPlayer2Winner = checkWinner(player2.currentSteps);\n\n    if (!isPlayer1Winner && player1.currentSteps.length === 5) {\n      setPlayer1((prevState) => ({ ...prevState, currentSteps: [] }));\n      setPlayer2((prevState) => ({ ...prevState, currentSteps: [] }));\n      setDraws(true);\n      return;\n    }\n\n    if (isPlayer1Winner) {\n      setPlayer1((prevState) => ({ ...prevState, currentSteps: [], wins: prevState.wins + 1 }));\n      setPlayer2((prevState) => ({ ...prevState, currentSteps: [] }));\n      setWinCombination(isPlayer1Winner);\n      return;\n    }\n    \n    if (isPlayer2Winner) {\n      setPlayer2((prevState) => ({ ...prevState, currentSteps: [], wins: prevState.wins + 1 }));\n      setPlayer1((prevState) => ({ ...prevState, currentSteps: [] }));\n      setWinCombination(isPlayer2Winner);\n      return;\n    }\n\n    setDraws(false);\n    setWinCombination(null);\n  }, [player1.currentSteps, player2.currentSteps, player1.name, player2.name]);\n\n  const getNamesHandler = (e) => {\n    e.preventDefault(e);\n    const name = e.target.name.value;\n\n    if (!name) {\n      alert('Please, enter your name!');\n      return;\n    } else if (name === player1.name) {\n      alert('Choose, another name!');\n      return;\n    };\n\n    if (!player1.name) {\n      setPlayer1((prevState) => ({ ...prevState, name }));\n      return;\n    }\n\n    setPlayer2((prevState) => ({ ...prevState, name }));\n\n    setShowModal(false);\n  }\n\n  const savePlayerSteps = (id, whoMadeStep) => {\n    if (whoMadeStep) {\n      setPlayer1((prevState) => ({ ...prevState, currentSteps: [...prevState.currentSteps, id] }));\n    } else { \n      setPlayer2((prevState) => ({ ...prevState, currentSteps: [...prevState.currentSteps, id] }));\n    }\n  }\n\n  return (\n    <Container>\n      <Board\n        savePlayerSteps={ savePlayerSteps }\n        winCombination={winCombination}\n        draws={ draws }\n      />\n      <ScoreTable \n        player1={ player1 }\n        player2={ player2 }\n      />\n      {showModal &&\n        <Modal\n          onSubmit={ getNamesHandler }\n        />\n      }\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}