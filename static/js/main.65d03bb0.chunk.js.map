{"version":3,"sources":["components/Container/Container.jsx","images/cross.svg","images/circle.svg","components/Cell/Cell.jsx","helpers/underliningWinComb.js","constant/index.js","components/Board/Board.jsx","components/ScoreTable/ScoreTable.jsx","components/Modal/Modal.jsx","components/Alert/Alert.jsx","helpers/findWinner.js","App.js","index.js"],"names":["Container","children","className","Cell","step","changeStep","id","cleanBoard","useState","symbol","setSymbol","useEffect","onClick","cross","zero","type","disabled","src","alt","underliningWinComb","array","result","join","WIN_COMBINATION","ALL_STEPS","Board","savePlayerSteps","winCombination","setStep","prevState","map","ScoreTable","player1","player2","name","wins","Modal","onSubmit","username","setUsername","e","htmlFor","autoComplete","value","onChange","target","usernameHandler","Alert","reloadBoard","checkWinner","playerSteps","length","i","winIndexes","j","checkNumber","includes","push","filter","item","isItDraws","currentUserSteps","player1Steps","player2Steps","unitedSteps","stepsDoNotUse","k","notUsedStepsAddToUserSteps","isKeepGoing","App","currentSteps","setPlayer1","setPlayer2","showModal","setShowModal","setWinCombination","draws","setDraws","setCleanBoard","isPlayer1Winner","isPlayer2Winner","stopGameToPlayer1","stopGameToPlayer2","whoMadeStep","preventDefault","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65d03bb0.chunk.js","sourcesContent":["import './styles.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return (\r\n    <div className='wrapper'>{ children }</div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","export default __webpack_public_path__ + \"static/media/cross.29b28d3a.svg\";","export default __webpack_public_path__ + \"static/media/circle.f9590110.svg\";","import { useState, useEffect } from 'react';\r\nimport cross from '../../images/cross.svg';\r\nimport zero from '../../images/circle.svg';\r\nimport './styles.css';\r\n\r\nconst Cell = ({ step, changeStep, id, cleanBoard }) => {\r\n  const [symbol, setSymbol] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    setSymbol(null);\r\n  }, [cleanBoard]);\r\n  \r\n  const showSymbolHandler = () => {\r\n    if (step) {\r\n      setSymbol(cross)\r\n    } else {\r\n      setSymbol(zero)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        changeStep(id);\r\n        showSymbolHandler();\r\n      }}\r\n      className='cell'\r\n      type='button'\r\n      disabled={symbol}\r\n    >\r\n      {symbol && <img src={symbol} alt=\"symbol\" />}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Cell;\r\n","const underliningWinComb = (array) => {\r\n  let result;\r\n\r\n  switch (array.join('')) {\r\n    case '123':\r\n      result = <div className='line1'></div>;\r\n      break;\r\n    \r\n    case '456':\r\n      result = <div className='line2'></div>;\r\n      break;\r\n\r\n    case '789':\r\n      result = <div className='line3'></div>;\r\n      break;\r\n    \r\n    case '147':\r\n      result = <div className='line4'></div>;\r\n      break;\r\n    \r\n    case '258':\r\n      result = <div className='line5'></div>;\r\n      break;\r\n    \r\n    case '369':\r\n      result = <div className='line6'></div>;\r\n      break;\r\n    \r\n    case '357':\r\n      result = <div className='line7'></div>;\r\n      break;\r\n\r\n    case '159':\r\n      result = <div className='line8'></div>;\r\n      break;\r\n  \r\n    default:\r\n      break;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport default underliningWinComb;","const WIN_COMBINATION = [\r\n  [1, 2, 3],\r\n  [4, 5, 6],\r\n  [7, 8, 9],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  [3, 6, 9],\r\n  [1, 5, 9],\r\n  [3, 5, 7],\r\n];\r\n\r\nconst ALL_STEPS = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nexport {\r\n  WIN_COMBINATION,\r\n  ALL_STEPS\r\n}","import { useState, useEffect } from 'react';\r\nimport Cell from '../Cell';\r\nimport underliningWinComb from '../../helpers/underliningWinComb';\r\nimport { ALL_STEPS } from '../../constant';\r\nimport './styles.css';\r\n\r\n\r\nconst Board = ({ savePlayerSteps, winCombination, cleanBoard }) => {\r\n  const [step, setStep] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setStep(true);\r\n  }, [cleanBoard])\r\n\r\n  const changeStep = (id) => {\r\n    setStep((prevState) => !prevState);\r\n    savePlayerSteps(id, step);\r\n  }\r\n\r\n  return (\r\n    <div className='board'>\r\n      <div className='horizontal-line1'></div>\r\n      <div className='horizontal-line2'></div>\r\n      <div className='vertical-line1'></div>\r\n      <div className='vertical-line2'></div>\r\n\r\n      {winCombination && underliningWinComb(winCombination)}\r\n\r\n      {ALL_STEPS.map(id => (\r\n        <Cell\r\n          changeStep={ changeStep }\r\n          step={step}\r\n          cleanBoard={ cleanBoard }\r\n          id={id}\r\n          key={id}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;","import './styles.css';\r\n\r\nconst ScoreTable = ({ player1, player2 }) => {\r\n  return (\r\n    <>\r\n      {player1.name && <div className='score-table'>\r\n        <h2>Score</h2>\r\n        <p>{player1.name} (x): {player1.wins}</p>\r\n        {player2.name && <p>{player2.name} (o): {player2.wins}</p>}\r\n      </div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ScoreTable;\r\n","import { useState } from 'react';\r\nimport './styles.css';\r\n\r\nconst Modal = ({ onSubmit }) => {\r\n  const [username, setUsername] = useState('');\r\n\r\n  const usernameHandler = (e) => {\r\n    setUsername(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className='overlay'>\r\n      <form\r\n        id='player-name'\r\n        onSubmit={\r\n          (e) => {\r\n            onSubmit(e);\r\n            setUsername('');\r\n          }\r\n        }\r\n      >\r\n        <label htmlFor='name'>Enter your name</label>\r\n        <input\r\n          type='text'\r\n          id='name'\r\n          autoComplete='off'\r\n          value={username}\r\n          onChange={(e) => usernameHandler(e)}\r\n        />\r\n        <button type=\"submit\">Confirm</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import './styles.css';\r\n\r\nconst Alert = ({ reloadBoard, winCombination }) => {\r\n  return (\r\n    <div className='overlay'>\r\n      <div className='alert'>\r\n        {winCombination ? <p>Round! Great win!</p>\r\n          : <p>Draw! Try once more.</p>}\r\n        <button onClick={ reloadBoard } type='button'>Next round</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import { WIN_COMBINATION, ALL_STEPS } from '../constant';\r\n\r\nconst checkWinner = (playerSteps) => {\r\n  if (playerSteps.length > 2) {\r\n    for (let i = 0; i < WIN_COMBINATION.length; i++) {\r\n      const result = [];\r\n      let winIndexes = null;\r\n\r\n      for (let j = 0; j < playerSteps.length; j++) {\r\n        const checkNumber = WIN_COMBINATION[i].includes(playerSteps[j]);\r\n        if (checkNumber) {\r\n          result.push(checkNumber);\r\n          winIndexes = WIN_COMBINATION[i];\r\n        } else {\r\n          result.push(checkNumber);\r\n        };\r\n      }\r\n\r\n      const isWin = result.filter(item => item === true).length === 3;\r\n\r\n      if (isWin) return winIndexes;\r\n    }\r\n  }\r\n}\r\n\r\nconst isItDraws = (currentUserSteps, player1Steps, player2Steps) => {\r\n  const unitedSteps = [...player1Steps, ...player2Steps];\r\n  const stepsDoNotUse = ALL_STEPS.filter(step => !unitedSteps.includes(step))\r\n\r\n  if (stepsDoNotUse.length < 3) {\r\n    for (let k = 0; k < stepsDoNotUse.length; k++) {\r\n      const notUsedStepsAddToUserSteps = [...currentUserSteps, stepsDoNotUse[k]];\r\n\r\n      for (let i = 0; i < WIN_COMBINATION.length; i++) {\r\n        const result = [];\r\n\r\n        for (let j = 0; j < notUsedStepsAddToUserSteps.length; j++) {\r\n          const checkNumber = WIN_COMBINATION[i].includes(notUsedStepsAddToUserSteps[j]);\r\n          if (checkNumber) {\r\n            result.push(checkNumber);\r\n          } else {\r\n            result.push(checkNumber);\r\n          };\r\n        }\r\n\r\n        const isKeepGoing = result.filter(item => item === true).length === 3;\r\n        \r\n        if (isKeepGoing) return isKeepGoing;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  checkWinner,\r\n  isItDraws\r\n};\r\n","import { useState, useEffect } from 'react';\nimport Container from './components/Container';\nimport Board from './components/Board';\nimport ScoreTable from './components/ScoreTable';\nimport Modal from './components/Modal';\nimport Alert from './components/Alert';\nimport { checkWinner, isItDraws } from './helpers/findWinner';\n\nconst App = () => {\n  const [player1, setPlayer1] = useState({\n    name: null,\n    wins: 0,\n    currentSteps: []\n  });\n\n  const [player2, setPlayer2] = useState({\n    name: null,\n    wins: 0,\n    currentSteps: []\n  });\n\n  const [showModal, setShowModal] = useState(true);\n  const [winCombination, setWinCombination] = useState(null);\n  const [draws, setDraws] = useState(false);\n\n  const [cleanBoard, setCleanBoard] = useState(false);\n\n  useEffect(() => {\n    setCleanBoard(false);\n    const isPlayer1Winner = checkWinner(player1.currentSteps);\n    const isPlayer2Winner = checkWinner(player2.currentSteps);\n    const stopGameToPlayer1 = isItDraws(player1.currentSteps, player1.currentSteps, player2.currentSteps);\n    const stopGameToPlayer2 = isItDraws(player2.currentSteps, player1.currentSteps, player2.currentSteps);\n\n    if (isPlayer1Winner) {\n      setPlayer1((prevState) => ({ ...prevState, currentSteps: [], wins: prevState.wins + 1 }));\n      setPlayer2((prevState) => ({ ...prevState, currentSteps: [] }));\n      setWinCombination(isPlayer1Winner);\n      return;\n    }\n    \n    if (isPlayer2Winner) {\n      setPlayer1((prevState) => ({ ...prevState, currentSteps: [] }));\n      setPlayer2((prevState) => ({ ...prevState, currentSteps: [], wins: prevState.wins + 1 }));\n      setWinCombination(isPlayer2Winner);\n      return;\n    }\n    \n    //task+\n\n    if (!stopGameToPlayer2 && !stopGameToPlayer1 && player1.currentSteps.length >= 4) {\n      setPlayer1((prevState) => ({ ...prevState, currentSteps: [] }));\n      setPlayer2((prevState) => ({ ...prevState, currentSteps: [] }));\n      setDraws(true);\n      return;\n    } else if (!stopGameToPlayer1 && player2.currentSteps.length === 4) {\n      if (isPlayer2Winner) {\n        setPlayer1((prevState) => ({ ...prevState, currentSteps: [] }));\n        setPlayer2((prevState) => ({ ...prevState, currentSteps: [], wins: prevState.wins + 1 }));\n        setWinCombination(isPlayer2Winner);\n      } else {\n        setPlayer1((prevState) => ({ ...prevState, currentSteps: [] }));\n        setPlayer2((prevState) => ({ ...prevState, currentSteps: [] }));\n        setDraws(true);\n      }\n    }\n    \n    //task #4\n\n    // if (!isPlayer1Winner && player1.currentSteps.length === 5) {\n    //   setPlayer1((prevState) => ({ ...prevState, currentSteps: [] }));\n    //   setPlayer2((prevState) => ({ ...prevState, currentSteps: [] }));\n    //   setDraws(true);\n    //   return;\n    // }\n  }, [\n    player1.currentSteps,\n    player2.currentSteps,\n    winCombination,\n    draws\n  ]);\n\n  const getNamesHandler = (e) => {\n    e.preventDefault(e);\n    const name = e.target.name.value;\n\n    if (!name) {\n      alert('Please, enter your name!');\n      return;\n    } else if (name === player1.name) {\n      alert('Choose, another name!');\n      return;\n    };\n\n    if (!player1.name) {\n      setPlayer1((prevState) => ({ ...prevState, name }));\n      return;\n    }\n\n    setPlayer2((prevState) => ({ ...prevState, name }));\n    setShowModal(false);\n  }\n\n  const savePlayerSteps = (id, whoMadeStep) => {\n    if (whoMadeStep) {\n      setPlayer1((prevState) => ({ ...prevState, currentSteps: [...prevState.currentSteps, id] }));\n    } else { \n      setPlayer2((prevState) => ({ ...prevState, currentSteps: [...prevState.currentSteps, id] }));\n    }\n  }\n\n  const reloadBoard = () => {\n    setWinCombination(null);\n    setDraws(false);\n    setCleanBoard(true);\n  }\n\n  return (\n    <Container>\n      <Board\n        savePlayerSteps={ savePlayerSteps }\n        winCombination={ winCombination }\n        cleanBoard={ cleanBoard }\n      />\n      <ScoreTable \n        player1={ player1 }\n        player2={ player2 }\n      />\n      {showModal &&\n        <Modal\n          onSubmit={ getNamesHandler }\n        />\n      }\n      {(winCombination || draws) &&\n        <Alert\n          reloadBoard={ reloadBoard }\n          winCombination={ winCombination }\n        />\n      }\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}